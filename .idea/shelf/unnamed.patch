Index: app/src/main/java/com/easv/oe/paging/DALC/SyllabusCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/easv/oe/paging/DALC/SyllabusCollection.java	(revision 5bcc4173fb8acf480380c1769c6b07727fe63180)
+++ app/src/main/java/com/easv/oe/paging/DALC/SyllabusCollection.java	(revision )
@@ -1,9 +1,9 @@
 package com.easv.oe.paging.DALC;
 
-import android.os.AsyncTask;
 import android.util.Log;
 
-import com.easv.oe.paging.InitializeTask;
+import com.easv.oe.paging.ListViewWithArrayAdapter;
+import com.easv.oe.paging.LoadingTask;
 
 import java.util.ArrayList;
 import java.util.concurrent.ExecutionException;
@@ -17,12 +17,14 @@
 
     public SyllabusRepository m_repo;
 
+    ListViewWithArrayAdapter m_gui;
     ArrayList<BESyllabus> m_cache;
 
-    public SyllabusCollection()
+    public SyllabusCollection(ListViewWithArrayAdapter gui)
     {
         m_repo = new SyllabusRepository();
         m_cache = new ArrayList<>();
+        m_gui = gui;
     }
 
     public BESyllabus get(int idx)
@@ -31,7 +33,7 @@
         if (idx >= m_cache.size())
         {
             int p = (idx / m_repo.pageSize()) + 1;
-            InitializeTask task = new InitializeTask(this);
+            LoadingTask task = new LoadingTask(this);
             Log.d(TAG, "Loading page " + p);
             task.execute(p);
 
@@ -50,7 +52,25 @@
         return m_cache.get(idx);
     }
 
+    public void ensureCache(int idx)
+    {
 
+        if (idx >= m_cache.size())
+        {
+            int p = (idx / m_repo.pageSize()) + 1;
+            LoadingTask task = new LoadingTask(this);
+            Log.d(TAG, "Loading page " + p);
+            task.execute(p);
 
-    public int size() { return m_cache.size(); }
+
+        }
+    }
+
+    public void refreshData(ArrayList<BESyllabus> s)
+    {
+        m_cache.addAll(s);
+        m_gui.refreshAdapter();
+    }
+
+    public ArrayList<BESyllabus> getAll() { return m_cache; }
 }
Index: app/src/main/java/com/easv/oe/paging/InitializeTask.java
===================================================================
--- app/src/main/java/com/easv/oe/paging/InitializeTask.java	(revision 5bcc4173fb8acf480380c1769c6b07727fe63180)
+++ app/src/main/java/com/easv/oe/paging/LoadingTask.java	(revision )
@@ -17,7 +17,7 @@
 import java.util.ArrayList;
 
 
-public class InitializeTask extends AsyncTask<
+public class LoadingTask extends AsyncTask<
         Integer,
         Void,
         ArrayList<BESyllabus>> // output of doInBackground
@@ -27,7 +27,7 @@
 
     SyllabusCollection m_context;
 
-    public InitializeTask(SyllabusCollection context)
+    public LoadingTask(SyllabusCollection context)
     {
         m_context = context;
     }
@@ -46,6 +46,7 @@
     @Override
     protected void onPostExecute(final ArrayList<BESyllabus> s) {
 
+        m_context.refreshData(s);
 
     }
 
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 5bcc4173fb8acf480380c1769c6b07727fe63180)
+++ .idea/vcs.xml	(revision )
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 5bcc4173fb8acf480380c1769c6b07727fe63180)
+++ .idea/misc.xml	(revision )
@@ -37,7 +37,7 @@
     <ConfirmationsSetting value="0" id="Add" />
     <ConfirmationsSetting value="0" id="Remove" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" assert-keyword="true" jdk-15="true" project-jdk-name="1.7" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
\ No newline at end of file
Index: app/src/main/java/com/easv/oe/paging/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/easv/oe/paging/MainActivity.java	(revision 5bcc4173fb8acf480380c1769c6b07727fe63180)
+++ app/src/main/java/com/easv/oe/paging/MainActivity.java	(revision )
@@ -28,7 +28,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         m_adapter = new PagingAdapter(this);
-        m_data = new SyllabusCollection();
+        m_data = new SyllabusCollection(this);
         setListAdapter(m_adapter);
         getListView().setOnScrollListener(this);
     }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 5bcc4173fb8acf480380c1769c6b07727fe63180)
+++ .idea/gradle.xml	(revision )
@@ -6,7 +6,7 @@
         <option name="distributionType" value="LOCAL" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleHome" value="$APPLICATION_HOME_DIR$/gradle/gradle-2.8" />
-        <option name="gradleJvm" value="1.7" />
+        <option name="gradleJvm" value="1.8" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
\ No newline at end of file
Index: app/src/main/java/com/easv/oe/paging/ListViewWithArrayAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/easv/oe/paging/ListViewWithArrayAdapter.java	(revision )
+++ app/src/main/java/com/easv/oe/paging/ListViewWithArrayAdapter.java	(revision )
@@ -0,0 +1,86 @@
+package com.easv.oe.paging;
+
+import android.app.ListActivity;
+import android.content.Context;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AbsListView;
+import android.widget.BaseAdapter;
+import android.widget.LinearLayout;
+import android.widget.SimpleAdapter;
+import android.widget.TextView;
+
+import com.easv.oe.paging.DALC.BESyllabus;
+import com.easv.oe.paging.DALC.SyllabusCollection;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class ListViewWithArrayAdapter extends ListActivity  implements AbsListView.OnScrollListener {
+
+    String TAG = "SYLLA";
+
+
+    SimpleAdapter m_adapter;
+    SyllabusCollection m_data;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        m_data = new SyllabusCollection(this);
+        m_data.ensureCache(10);
+        getListView().setOnScrollListener(this);
+    }
+
+
+    public void onScroll(AbsListView view,
+                         int firstVisible, int visibleCount, int totalCount) {
+
+        boolean loadMore = /* maybe add a padding */
+                firstVisible + visibleCount >= totalCount;
+
+        Log.d(TAG, "onScroll totalCount = " + totalCount);
+        if(loadMore) {
+            m_data.ensureCache(firstVisible + visibleCount);
+
+        }
+    }
+
+    public void onScrollStateChanged(AbsListView v, int s) { }
+
+    private List<Map<String, String>> asListMap(List<BESyllabus> src)
+    {
+        List<Map<String, String>> res =
+                new ArrayList<Map<String, String>>();
+        for (BESyllabus s : src)
+        {
+            Map<String, String> e = new HashMap<String, String>();
+            e.put("id", ""+s.m_year);
+            e.put("title", s.m_title);
+            res.add(e);
+        }
+        return res;
+    }
+
+    protected SimpleAdapter createAdapter() {
+        SimpleAdapter adapter =
+                new SimpleAdapter(this,
+                        asListMap(m_data.getAll()),
+                        R.layout.cell,
+                        new String[] { "id", "title" },
+                        new int[] { R.id.txtID, R.id.txtTitle });
+        return adapter;
+    }
+
+    public void refreshAdapter()
+    {
+        m_adapter = createAdapter();
+        setListAdapter(m_adapter);
+    }
+}
